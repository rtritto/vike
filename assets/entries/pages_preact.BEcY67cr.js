import{j as e,o as n,i as l}from"../chunks/chunk-QQHFLgus.js";import{L as i}from"../chunks/chunk-DJTIoNMK.js";/* empty css                      */import{E as o}from"../chunks/chunk-DFhVjdo2.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-7E_FEcaS.js";/* empty css                      */const s=[];function a(r){const t={a:"a",li:"li",p:"p",ul:"ul",...r.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Examples of using Vike with ",e.jsx(t.a,{href:"https://preactjs.com/",children:"Preact"}),":"]}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[e.jsx(o,{timestamp:"2023.10",repo:"brillout/vike-preact"})," - With ",e.jsx(i,{href:"/client-routing",children:"Client Routing"})]}),`
`,e.jsxs(t.li,{children:[e.jsx(o,{timestamp:"2023.10",repo:"brillout/vike-preact-server-routing"})," - With ",e.jsx(i,{href:"/server-routing",children:"Server Routing"})]}),`
`]})]})}function d(r={}){const{wrapper:t}=r.components||{};return t?e.jsx(t,{...r,children:e.jsx(a,{...r})}):a(r)}const p=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),g={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},NavHeader:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+NavHeader.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:l}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/preact/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:p}}};export{g as configValuesSerialized};
