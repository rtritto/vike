import{j as e,o as l,i}from"../chunks/chunk-DyoRqzik.js";import{L as a}from"../chunks/chunk-Db1tBso6.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-B0bomZhE.js";/* empty css                      */const t=[{pageSectionId:"build",pageSectionLevel:2,pageSectionTitle:"Build"},{pageSectionId:"dev",pageSectionLevel:2,pageSectionTitle:"Dev"}];function r(s){const n={a:"a",code:"code",figure:"figure",li:"li",p:"p",pre:"pre",span:"span",ul:"ul",...s.components};return e.jsxs(e.Fragment,{children:[e.jsx(n.p,{children:"In general, a Vike app is just a Node.js server, so we can use any Node.js Docker container."}),`
`,e.jsx("h2",{id:"build",children:"Build"}),`
`,e.jsx(n.p,{children:"If we build our app in Docker, we may stumble upon out-of-memory errors."}),`
`,e.jsxs(n.p,{children:["If we do, we check whether our Docker container has enough memory, and we may also need to set ",e.jsxs(n.a,{href:"https://nodejs.org/api/cli.html#--max-old-space-sizesize-in-megabytes",children:["Node.js' ",e.jsx(n.code,{children:"--max-old-space-size"})]}),"."]}),`
`,e.jsx(n.figure,{"data-rehype-pretty-code-figure":"",children:e.jsx(n.pre,{style:{backgroundColor:"#fff",color:"#24292e"},tabIndex:"0","data-language":"json","data-theme":"github-light",children:e.jsxs(n.code,{"data-language":"json","data-theme":"github-light",style:{display:"grid"},children:[e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#6A737D"},children:"// package.json"})}),`
`,e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#24292E"},children:"{"})}),`
`,e.jsxs(n.span,{"data-line":"",children:[e.jsx(n.span,{style:{color:"#005CC5"},children:'  "scripts"'}),e.jsx(n.span,{style:{color:"#24292E"},children:": {"})]}),`
`,e.jsxs(n.span,{"data-line":"",children:[e.jsx(n.span,{style:{color:"#005CC5"},children:'    "// We use Node.js\' environment variable `NODE_OPTIONS` to increase memory size to 3GB"'}),e.jsx(n.span,{style:{color:"#24292E"},children:": "}),e.jsx(n.span,{style:{color:"#032F62"},children:'""'}),e.jsx(n.span,{style:{color:"#24292E"},children:","})]}),`
`,e.jsxs(n.span,{"data-line":"",children:[e.jsx(n.span,{style:{color:"#005CC5"},children:'    "build"'}),e.jsx(n.span,{style:{color:"#24292E"},children:": "}),e.jsx(n.span,{style:{color:"#032F62"},children:'"NODE_OPTIONS=--max-old-space-size=3072 npm run build:run"'}),e.jsx(n.span,{style:{color:"#24292E"},children:","})]}),`
`,e.jsxs(n.span,{"data-line":"",children:[e.jsx(n.span,{style:{color:"#005CC5"},children:'    "build:run"'}),e.jsx(n.span,{style:{color:"#24292E"},children:": "}),e.jsx(n.span,{style:{color:"#032F62"},children:'"vite build"'})]}),`
`,e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#24292E"},children:"  }"})}),`
`,e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#24292E"},children:"}"})})]})})}),`
`,e.jsx(n.p,{children:"See also:"}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsxs(n.li,{children:[`
`,e.jsx(a,{href:"/debug"}),`
`]}),`
`]}),`
`,e.jsx("h2",{id:"dev",children:"Dev"}),`
`,e.jsx(n.p,{children:"If we want to use Docker for development as well, we need to properly configure Docker for Vite's HMR port."}),`
`,e.jsxs(n.p,{children:["If we use Windows with ",e.jsx(n.a,{href:"https://docs.microsoft.com/en-us/windows/wsl/",children:"WSL"}),", we need to configure ",e.jsx(n.a,{href:"https://github.com/paulmillr/chokidar",children:e.jsx(n.code,{children:"chokidar"})})," to use polling. (Vite uses ",e.jsx(n.code,{children:"chokidar"}),".)"]}),`
`,e.jsx(n.figure,{"data-rehype-pretty-code-figure":"",children:e.jsx(n.pre,{style:{backgroundColor:"#fff",color:"#24292e"},tabIndex:"0","data-language":"json","data-theme":"github-light",children:e.jsxs(n.code,{"data-language":"json","data-theme":"github-light",style:{display:"grid"},children:[e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#6A737D"},children:"// package.json"})}),`
`,e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#24292E"},children:"{"})}),`
`,e.jsxs(n.span,{"data-line":"",children:[e.jsx(n.span,{style:{color:"#005CC5"},children:'  "scripts"'}),e.jsx(n.span,{style:{color:"#24292E"},children:": {"})]}),`
`,e.jsxs(n.span,{"data-line":"",children:[e.jsx(n.span,{style:{color:"#005CC5"},children:'    "dev"'}),e.jsx(n.span,{style:{color:"#24292E"},children:": "}),e.jsx(n.span,{style:{color:"#032F62"},children:'"CHOKIDAR_USEPOLLING=true npm run server"'})]}),`
`,e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#24292E"},children:"  }"})}),`
`,e.jsx(n.span,{"data-line":"",children:e.jsx(n.span,{style:{color:"#24292E"},children:"}"})})]})})}),`
`,e.jsxs(n.p,{children:["Note that ",e.jsx(n.a,{href:"https://discord.com/channels/815937377888632913/815937377888632916/910110118375489567",children:"it has been reported"})," that ",e.jsx(n.a,{href:"https://vitejs.dev/config/#server-watch",children:"vite.config.js#server.watch.usePolling"})," doesn't work."]}),`
`,e.jsx(n.p,{children:"See also:"}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"https://stackoverflow.com/questions/38318188/chokidar-isnt-picking-up-file-changes-inside-docker-container/69166925#69166925",children:"StackOverflow - Chokidar isn't picking up file changes inside docker container"})}),`
`]})]})}function o(s={}){const{wrapper:n}=s.components||{};return n?e.jsx(n,{...s,children:e.jsx(r,{...s})}):r(s)}const d=Object.freeze(Object.defineProperty({__proto__:null,default:o,pageSectionsExport:t},Symbol.toStringTag,{value:"Module"})),m={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:l}},NavHeader:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+NavHeader.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:i}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/docker/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:d}}};export{m as configValuesSerialized};
