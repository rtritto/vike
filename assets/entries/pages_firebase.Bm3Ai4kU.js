import{j as e,o,i as r}from"../chunks/chunk-DyoRqzik.js";import"../chunks/chunk-B0bomZhE.js";/* empty css                      */import{U as n}from"../chunks/chunk--iVfHd15.js";import{J as l}from"../chunks/chunk-_MuzVgrF.js";import{E as s}from"../chunks/chunk-C9F-FFAk.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-Db1tBso6.js";const d=[{pageSectionId:"example",pageSectionLevel:2,pageSectionTitle:"Example"}];function a(i){const t={a:"a",li:"li",p:"p",ul:"ul",...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(n,{children:e.jsx(t.a,{href:"https://firebase.google.com",children:"Firebase"})}),`
`,e.jsxs(t.p,{children:[e.jsx(l,{})," This means that Vike can be used with Firebase simply by following ",e.jsx(t.a,{href:"https://firebase.google.com/docs/hosting/functions#use_a_web_framework",children:"Firebase's official guide"}),"."]}),`
`,e.jsx("h2",{id:"example",children:"Example"}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[`
`,e.jsx(s,{timestamp:"2023.11",repo:"gonesurfing/vike-ssr"}),`
`]}),`
`]})]})}function p(i={}){const{wrapper:t}=i.components||{};return t?e.jsx(t,{...i,children:e.jsx(a,{...i})}):a(i)}const u=Object.freeze(Object.defineProperty({__proto__:null,default:p,pageSectionsExport:d},Symbol.toStringTag,{value:"Module"})),z={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:o}},NavHeader:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+NavHeader.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:r}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/firebase/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:u}}};export{z as configValuesSerialized};
